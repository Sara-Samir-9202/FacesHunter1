[
  {
    "ContainingType": "FacesHunter.Controllers.AdminController",
    "Method": "ApproveCase",
    "RelativePath": "api/Admin/approve/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AdminController",
    "Method": "GetAuditLogs",
    "RelativePath": "api/Admin/audit-logs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AdminController",
    "Method": "GetDashboard",
    "RelativePath": "api/Admin/dashboard",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AdminController",
    "Method": "UpdatePerson",
    "RelativePath": "api/Admin/person/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updated",
        "Type": "FacesHunter.Models.Person",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AdminController",
    "Method": "DeletePerson",
    "RelativePath": "api/Admin/person/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AdminController",
    "Method": "GetAllPersons",
    "RelativePath": "api/Admin/persons",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AdminController",
    "Method": "GetPersonsFiltered",
    "RelativePath": "api/Admin/persons/filter",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AdminController",
    "Method": "GetStats",
    "RelativePath": "api/Admin/stats",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AdminController",
    "Method": "GetUnapprovedReports",
    "RelativePath": "api/Admin/unapproved",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AdminController",
    "Method": "ToggleUser",
    "RelativePath": "api/Admin/user/toggle/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AnalyticsController",
    "Method": "GetAnalyticsSummary",
    "RelativePath": "api/Analytics/summary",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "FacesHunter.DTOs.UserLoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "FacesHunter.DTOs.UserRegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/Auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ResetPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.FaceProcessingController",
    "Method": "AgeTransform",
    "RelativePath": "api/FaceProcessing/age-transform",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "image",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "targetAge",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.FaceRecognitionController",
    "Method": "AgeTransform",
    "RelativePath": "api/FaceRecognition/age-transform",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "image",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "targetAge",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.FaceRecognitionController",
    "Method": "CompareFace",
    "RelativePath": "api/FaceRecognition/compare",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "image",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.FaceRecognitionController",
    "Method": "SearchByImage",
    "RelativePath": "api/FaceRecognition/search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "image",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.NotificationController",
    "Method": "MarkAsReadAlternative",
    "RelativePath": "api/Notification/{id}/read",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.NotificationController",
    "Method": "GetAllNotifications",
    "RelativePath": "api/Notification/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.NotificationController",
    "Method": "MarkAsRead",
    "RelativePath": "api/Notification/mark-as-read/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.NotificationController",
    "Method": "GetMyNotifications",
    "RelativePath": "api/Notification/my",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.NotificationController",
    "Method": "SendToUser",
    "RelativePath": "api/Notification/send-to-user",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "message",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.PersonsController",
    "Method": "AddPerson",
    "RelativePath": "api/Persons",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "FullName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Age",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Gender",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Status",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "LastSeenLocation",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "DateMissing",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "PersonImage",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "ReporterName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ReporterPhone",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "NationalIdCard",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "AdditionalInfo",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ImagePath",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ReporterIdImage",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.PersonsController",
    "Method": "GetMyPersons",
    "RelativePath": "api/Persons/my",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.ReportsController",
    "Method": "GetMyReports",
    "RelativePath": "api/Reports/my-reports",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.ReportsController",
    "Method": "ReportFound",
    "RelativePath": "api/Reports/report-found",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "FacesHunter.DTOs.ReportPersonDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.ReportsController",
    "Method": "ReportMissing",
    "RelativePath": "api/Reports/report-missing",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "FacesHunter.DTOs.ReportPersonDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.SearchController",
    "Method": "SearchWithAI",
    "RelativePath": "api/Search/search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Image",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.SuccessStoriesController",
    "Method": "AddStory",
    "RelativePath": "api/SuccessStories/add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Title",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Video",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "DatePosted",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.SuccessStoriesController",
    "Method": "GetAllStories",
    "RelativePath": "api/SuccessStories/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FacesHunter.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FacesHunter.WeatherForecast, FacesHunter, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]